apiVersion: v1
kind: Namespace
metadata:
  name: rtorrent
  labels:
    pod-security.kubernetes.io/enforce: privileged
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rtorrent
  namespace: rtorrent
spec:
  selector:
    matchLabels:
      app: rtorrent
      namespace: rtorrent
  template:
    metadata:
      labels:
        app: rtorrent
        namespace: rtorrent
    spec:
      initContainers:
      - name: gluetun
        image: "ghcr.io/qdm12/gluetun:latest"
        restartPolicy: Always
        envFrom:
         - secretRef:
            name: rtorrent
            optional: false
        env:
        - name: TZ
          value: "Europe/Warsaw"
        - name: FIREWALL_DEBUG
          value: "on"
        - name: FIREWALL_INPUT_PORTS
          value: "8080,8888"
        - name: HTTP_CONTROL_SERVER_ADDRESS
          value: ":18000"
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
        resources:
          limits:
            squat.ai/tun: "1"
      - name: rclone
        image: docker.io/rclone/rclone:latest
        volumeMounts:
        - name: media-zfs
          mountPath: /media
        command: [ "rclone" ]
        args:
        - serve
        - webdav
        - --addr
        - :8888
        - /media
        restartPolicy: Always
      containers:
      - name: rtorrent
        image: ghcr.io/crazy-max/rtorrent-rutorrent:latest
        volumeMounts:
        - name: config-data
          mountPath: /data
        - name: media-zfs
          mountPath: /downloads
        - name: media-zfs-migrate
          mountPath: /downloads/migrate
      volumes:
      - name: config-data
        persistentVolumeClaim:
          claimName: config-data
      - name: media-zfs
        persistentVolumeClaim:
          claimName: media-zfs
      - name: media-zfs-migrate
        persistentVolumeClaim:
          claimName: media-zfs-migrate
---
apiVersion: v1
kind: Service
metadata:
  name: rtorrent
  namespace: rtorrent
spec:
  selector:
    app: rtorrent
  ports:
  - port: 8080
    targetPort: 8080
    name: web
    protocol: TCP
  - port: 8888
    targetPort: 8888
    name: webdav
    protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rtorrent
  namespace: rtorrent
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt"
spec:
  rules:
  - host: rtorrent.ugard.mywire.org
    http:
      paths:
        - path: "/"
          pathType: Prefix
          backend:
            service:
              name: rtorrent
              port:
                number: 8080
  tls:
  - hosts:
    - rtorrent.ugard.mywire.org
    secretName: tls-rtorrent-ingress-http