# Source: benji/templates/cron-jobs.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: benji-backup-all
  namespace: backup-system
  labels:
    app.kubernetes.io/name: benji
    app.kubernetes.io/instance: benji
    app.kubernetes.io/component: cronjob-backup-all
spec:
  schedule: "30 07 * * *"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/name: benji
        app.kubernetes.io/instance: benji
        app.kubernetes.io/component: cronjob-backup-all
    spec:
      backoffLimit: 0
      template:
        metadata:
          labels:
            app.kubernetes.io/name: benji
            app.kubernetes.io/instance: benji
            app.kubernetes.io/component: cronjob-backup-all
        spec:
          serviceAccountName: benji
          dnsPolicy: ClusterFirstWithHostNet
          restartPolicy: Never
          initContainers:
            - name: get-ceph-secrets
              image: ghcr.io/undistro/kubexns:v0.1.5
              volumeMounts:
              - mountPath: "/tmp/.config"
                name: global-config
              env:
                - name: DIR
                  value: "/tmp/.config"
                - name: CONFIGMAPS
                  value: "rook-ceph2/rook-ceph-mon-endpoints"     # mount the ConfigMap `global-config` from `config` namespace
                - name: SECRETS
                  value: "rook-ceph2/rook-ceph-mon"                  # match secrets by label selector
            - name: generate-ceph-files
              image: rook/ceph:v1.13.3
              command: ["/usr/bin/bash"]
              args: ["-c", "bash /script/generate-ceph.sh"]
              volumeMounts:
                - name: ceph-data
                  mountPath: /etc/ceph
                - name: ceph-config
                  mountPath: /script/generate-ceph.sh
                  subPath: generate-ceph.sh
                - mountPath: "/tmp/.config"
                  name: global-config
              env:
                - name: DIR
                  value: "/tmp/.config"
          containers:
            - name: benji
              image: "ghcr.io/elemental-lf/benji-k8s:0.17.0"
              imagePullPolicy: IfNotPresent
              securityContext:
                privileged: true
              command:
                - benji-backup-pvc
                - -l
                - backup-this-pvc = true
              env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: PROM_PUSH_GATEWAY
                  value: "benji-pushgateway:9091"
                - name: TZ
                  value: "Europe/Warsaw"
              volumeMounts:
                - name: benji-config
                  mountPath: /benji/etc
                - name: ceph-data
                  mountPath: /etc/ceph
          volumes:
          - name: benji-config
            secret:
              secretName: benji-config
          - name: ceph-data
            emptyDir: {}
          - name: ceph-config
            secret:
              secretName: generate-ceph
          - name: global-config       # shared volume between init and application container
            emptyDir: {}
---
# Source: benji/templates/cron-jobs.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: benji-enforce
  namespace: backup-system
  labels:
    app.kubernetes.io/name: benji
    app.kubernetes.io/instance: benji
    app.kubernetes.io/component: cronjob-enforce
spec:
  schedule: "00 06 * * *"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/name: benji
        app.kubernetes.io/instance: benji
        app.kubernetes.io/component: cronjob-enforce
    spec:
      backoffLimit: 0
      template:
        metadata:
          labels:
            app.kubernetes.io/name: benji
            app.kubernetes.io/instance: benji
            app.kubernetes.io/component: cronjob-enforce
        spec:
          serviceAccountName: benji
          dnsPolicy: ClusterFirstWithHostNet
          restartPolicy: Never
          initContainers:
            - name: get-ceph-secrets
              image: ghcr.io/undistro/kubexns:v0.1.5
              volumeMounts:
              - mountPath: "/tmp/.config"
                name: global-config
              env:
                - name: DIR
                  value: "/tmp/.config"
                - name: CONFIGMAPS
                  value: "rook-ceph2/rook-ceph-mon-endpoints"     # mount the ConfigMap `global-config` from `config` namespace
                - name: SECRETS
                  value: "rook-ceph2/rook-ceph-mon"                  # match secrets by label selector
            - name: generate-ceph-files
              image: rook/ceph:v1.13.3
              command: ["/usr/bin/bash"]
              args: ["-c", "bash /script/generate-ceph.sh"]
              volumeMounts:
                - name: ceph-data
                  mountPath: /etc/ceph
                - name: ceph-config
                  mountPath: /script/generate-ceph.sh
                  subPath: generate-ceph.sh
                - mountPath: "/tmp/.config"
                  name: global-config
              env:
                - name: DIR
                  value: "/tmp/.config"
          containers:
            - name: benji
              image: "ghcr.io/elemental-lf/benji-k8s:0.17.0"
              imagePullPolicy: IfNotPresent
              securityContext:
                privileged: true
              command:
                - benji-command
                - enforce
                - latest7
                - labels["benji-backup.me/instance"] == "benji-k8s"
              env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: PROM_PUSH_GATEWAY
                  value: "benji-pushgateway:9091"
                - name: TZ
                  value: "Europe/Warsaw"
              volumeMounts:
                - name: benji-config
                  mountPath: /benji/etc
                - name: ceph-data
                  mountPath: /etc/ceph
          volumes:
          - name: benji-config
            secret:
              secretName: benji-config
          - name: ceph-data
            emptyDir: {}
          - name: ceph-config
            secret:
              secretName: generate-ceph
          - name: global-config       # shared volume between init and application container
            emptyDir: {}
---
# Source: benji/templates/cron-jobs.yaml
apiVersion: batch/v1
kind: CronJob
metadata:
  name: benji-cleanup
  namespace: backup-system
  labels:
    app.kubernetes.io/name: benji
    app.kubernetes.io/instance: benji
    app.kubernetes.io/component: cronjob-cleanup
spec:
  schedule: "00 09 * * *"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  jobTemplate:
    metadata:
      labels:
        app.kubernetes.io/name: benji
        app.kubernetes.io/instance: benji
        app.kubernetes.io/component: cronjob-cleanup
    spec:
      backoffLimit: 0
      template:
        metadata:
          labels:
            app.kubernetes.io/name: benji
            app.kubernetes.io/instance: benji
            app.kubernetes.io/component: cronjob-cleanup
        spec:
          serviceAccountName: benji
          dnsPolicy: ClusterFirstWithHostNet
          restartPolicy: Never
          initContainers:
            - name: get-ceph-secrets
              image: ghcr.io/undistro/kubexns:v0.1.5
              volumeMounts:
              - mountPath: "/tmp/.config"
                name: global-config
              env:
                - name: DIR
                  value: "/tmp/.config"
                - name: CONFIGMAPS
                  value: "rook-ceph2/rook-ceph-mon-endpoints"     # mount the ConfigMap `global-config` from `config` namespace
                - name: SECRETS
                  value: "rook-ceph2/rook-ceph-mon"                  # match secrets by label selector
            - name: generate-ceph-files
              image: rook/ceph:v1.13.3
              command: ["/usr/bin/bash"]
              args: ["-c", "bash /script/generate-ceph.sh"]
              volumeMounts:
                - name: ceph-data
                  mountPath: /etc/ceph
                - name: ceph-config
                  mountPath: /script/generate-ceph.sh
                  subPath: generate-ceph.sh
                - mountPath: "/tmp/.config"
                  name: global-config
              env:
                - name: DIR
                  value: "/tmp/.config"
          containers:
            - name: benji
              image: "ghcr.io/elemental-lf/benji-k8s:0.17.0"
              imagePullPolicy: IfNotPresent
              securityContext:
                privileged: true
              command:
                - benji-command
                - cleanup
              env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: PROM_PUSH_GATEWAY
                  value: "benji-pushgateway:9091"
                - name: TZ
                  value: "Europe/Warsaw"
              volumeMounts:
                - name: benji-config
                  mountPath: /benji/etc
                - name: ceph-data
                  mountPath: /etc/ceph
          volumes:
          - name: benji-config
            secret:
              secretName: benji-config
          - name: ceph-data
            emptyDir: {}
          - name: ceph-config
            secret:
              secretName: generate-ceph
          - name: global-config       # shared volume between init and application container
            emptyDir: {}