apiVersion: apps/v1
kind: Deployment
metadata:
  name: broker
  namespace: paperless
spec:
  selector:
    matchLabels:
      app: broker
      namespace: paperless
  template:
    metadata:
      labels:
        app: broker
        namespace: paperless
    spec:
      containers:
      - name: broker
        image: docker.io/library/redis:7
        resources:
          limits:
            memory: "2Gi"
        ports:
        - containerPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gotenberg
  namespace: paperless
spec:
  selector:
    matchLabels:
      app: gotenberg
      namespace: paperless
  template:
    metadata:
      labels:
        app: gotenberg
        namespace: paperless
    spec:
      containers:
      - name: gotenberg
        image: docker.io/gotenberg/gotenberg:8.7
        command: [ "gotenberg" ]
        args:
        - "--chromium-disable-javascript=true"
        - "--chromium-allow-list=file:///tmp/.*"
        resources:
          limits:
            memory: "2Gi"
        ports:
        - containerPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tika
  namespace: paperless
spec:
  selector:
    matchLabels:
      app: tika
      namespace: paperless
  template:
    metadata:
      labels:
        app: tika
        namespace: paperless
    spec:
      containers:
      - name: tika
        image: ghcr.io/paperless-ngx/tika:latest
        resources:
          limits:
            memory: "2Gi"
        ports:
        - containerPort: 9998
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webserver
  namespace: paperless
spec:
  selector:
    matchLabels:
      app: webserver
      namespace: paperless
  template:
    metadata:
      labels:
        app: webserver
        namespace: paperless
    spec:
      containers:
      - name: webserver
        image: ghcr.io/paperless-ngx/paperless-ngx:latest
        resources:
          limits:
            memory: "2Gi"
        ports:
        - containerPort: 8000
        env:
        - name: PAPERLESS_REDIS
          value: redis://broker:6379
        - name: PAPERLESS_TIKA_ENABLED
          value: "1"
        - name: PAPERLESS_TIKA_GOTENBERG_ENDPOINT
          value: "http://gotenberg:3000"
        - name: PAPERLESS_TIKA_ENDPOINT
          value: "http://tika:9998"
        - name: PAPERLESS_OCR_LANGUAGES
          value: pol
        - name: PAPERLESS_OCR_LANGUAGE
          value: pol
        - name: PAPERLESS_CONSUMER_DELETE_DUPLICATES
          value: "true"
        - name: PAPERLESS_CONSUMER_POLLING
          value: "15"
        - name: PAPERLESS_AUTO_LOGIN_USERNAME
          value: "admin"
        - name: PAPERLESS_URL
          value: https://paperless.ugard.mywire.org
        - name: PAPERLESS_TIME_ZONE
          value: Europe/Warsaw
        - name: PAPERLESS_DBHOST
          value: postgres.postgres
        - name: PAPERLESS_DBNAME
          valueFrom:
            secretKeyRef:
              name: postgresdb
              key: POSTGRES_DB
        - name: PAPERLESS_DBUSER
          valueFrom:
            secretKeyRef:
              name: postgresdb
              key: POSTGRES_USER
        - name: PAPERLESS_DBPASS
          valueFrom:
            secretKeyRef:
              name: postgresdb
              key: POSTGRES_PASSWORD
        - name: PAPERLESS_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: postgresdb
              key: PAPERLESS_ADMIN_USER
        - name: PAPERLESS_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresdb
              key: PAPERLESS_ADMIN_PASSWORD
        volumeMounts:
        - name: data
          mountPath: /usr/src/paperless/data
        - name: media
          mountPath: /usr/src/paperless/media
        - name: export
          mountPath: /usr/src/paperless/export
        - name: consume
          mountPath: /usr/src/paperless/consume
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: paperless-data
      - name: media
        persistentVolumeClaim:
          claimName: paperless-media
      - name: export
        persistentVolumeClaim:
          claimName: paperless-export
      - name: consume
        persistentVolumeClaim:
          claimName: paperless-consume
      