---
# Deploys a new MinIO Pod into the metadata.namespace Kubernetes namespace
#
# The `spec.containers[0].args` contains the command run on the pod
# The `/data` directory corresponds to the `spec.containers[0].volumeMounts[0].mountPath`
# That mount path corresponds to a Kubernetes HostPath which binds `/data` to a local drive or volume on the worker node where the pod runs
# 
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: minio
  name: minio
  namespace: minio # Change this value to match the namespace metadata.name
spec:
  containers:
  - name: minio
    image: quay.io/minio/minio:latest
    command:
    - /bin/bash
    - -c
    args: 
    - minio server /data --console-address :9090
    ports:
    - containerPort: 9090
      name: web
    - containerPort: 9000
      name: minio
    volumeMounts:
    - mountPath: /data
      name: localvolume # Corresponds to the `spec.volumes` Persistent Volume
  # nodeSelector:
    # kubernetes.io/hostname: kubealpha.local # Specify a node label associated to the Worker Node on which you want to deploy the pod.
  volumes:
  - name: localvolume
    persistentVolumeClaim:
      claimName: minio-zfspv
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: minio
spec:
  ports:
  - name: minio
    port: 9000
    targetPort: 9000
    protocol: TCP
  - name: web
    port: 80
    protocol: TCP
    targetPort: 9090
  selector:
    app: minio
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio
  namespace: minio
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt"
spec:
  rules:
  - host: minio.ugard.mywire.org
    http:
      paths:
        - path: "/"
          pathType: Prefix
          backend:
            service:
              name: minio
              port:
                number: 80
  tls:
  - hosts:
    - minio.ugard.mywire.org
    secretName: tls-minio-ingress-http
