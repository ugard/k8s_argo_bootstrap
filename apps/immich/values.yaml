controllers:
  main:
    containers:
      main:
        image:
          tag: v2.0.1
        env:
          # REDIS_HOSTNAME: '{{ printf "%s-valkey" .Release.Name }}'
          # IMMICH_MACHINE_LEARNING_URL: '{{ printf "http://%s-machine-learning:3003" .Release.Name }}'
          DB_HOSTNAME: "postgres"
          DB_USERNAME: "immich"
          DB_DATABASE_NAME: "immich"

immich:
  metrics:
    # Enabling this will create the service monitors needed to monitor immich with the prometheus operator
    enabled: false
  persistence:
    # Main data store for all photos shared between different components.
    library:
      # Automatically creating the library volume is not supported by this chart
      # You have to specify an existing PVC to use
      existingClaim: immich-data-pvc
  # configuration is immich-config.json converted to yaml
  # ref: https://immich.app/docs/install/config-file/
  #
  configuration: {}

valkey:
  enabled: true
  controllers:
    main:
      containers:
        main:
          image:
            repository: docker.io/valkey/valkey
            tag: 8.0-alpine
            pullPolicy: IfNotPresent
  persistence:
    existingClaim: "immich-redis-pvc"
    
# Immich components

server:
  enabled: true
  controllers:
    main:
      containers:
        main:
          image:
            repository: ghcr.io/immich-app/immich-server
            pullPolicy: IfNotPresent
  nodeSelector:
    kubernetes.io/arch: "amd64"
  ingress:
    main:
      enabled: true
      annotations:
        # proxy-body-size is set to 0 to remove the body limit on file uploads
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
        cert-manager.io/cluster-issuer: "letsencrypt"
      hosts:
        - host: immich.ugard.mywire.org
          paths:
            - path: "/"
      tls:
      - hosts:
          - immich.ugard.mywire.org
        secretName: tls-immich-ingress-http
  probes:
    liveness:
      spec:
        failureThreshold: 90
    readiness:
      spec:
        failureThreshold: 90
machine-learning:
  enabled: true
  controllers:
    main:
      containers:
        main:
          image:
            repository: ghcr.io/immich-app/immich-machine-learning
            pullPolicy: IfNotPresent
          env:
            TRANSFORMERS_CACHE: /cache
  probes:
    liveness:
      spec:
        failureThreshold: 30
    readiness:
      spec:
        failureThreshold: 30
  persistence:
    cache:
      enabled: true
      size: 10Gi
      # Optional: Set this to pvc to avoid downloading the ML models every start.
      type: emptyDir
      accessMode: ReadWriteMany
      storageClass: rook-ceph-block
