apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus
  namespace: argocd
spec:
  destination:
    namespace: monitoring
    server: {{ .Values.spec.destination.server }}
  project: default
  sources:
  - chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 75.15.1
    helm:
      release-name: kube-prometheus-stack
      valuesObject:
        defaultRules:
          create: false
        grafana:
          enabled: true
          defaultDashboardsEnabled: false
          ingress:
            enabled: true

            ## IngressClassName for Grafana Ingress.
            ## Should be provided if Ingress is enable.
            ##
            ingressClassName: kustomize-traefik

            ## Annotations for Grafana Ingress
            ##
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt
              # kubernetes.io/ingress.class: nginx
              # kubernetes.io/tls-acme: "true"

            ## Labels to be added to the Ingress
            ##
            labels: {}

            ## Hostnames.
            ## Must be provided if Ingress is enable.
            ##
            # hosts:
            #   - grafana.domain.com
            hosts:
              - prom.ugard.mywire.org

            ## Path for grafana ingress
            path: /

            ## TLS configuration for grafana Ingress
            ## Secret must be manually created in the namespace
            ##
            tls:
              - secretName: prom-general-tls
                hosts:
                - prom.ugard.mywire.org
              
            # # To make Grafana persistent (Using Statefulset)
            # #
            # persistence:
            #   enabled: true
            #   type: sts
            #   storageClassName: "rook-ceph-block"
            #   accessModes:
            #     - ReadWriteOnce
            #   size: 5Gi
            #   finalizers:
            #     - kubernetes.io/pvc-protection
        kubernetesServiceMonitors:
          enabled: false
        kubeApiServer:
          enabled: false
        kubelet:
          enabled: false
        kubeControllerManager:
          enabled: false
        coreDns:
          enabled: false
        kubeEtcd:
          enabled: false
        kubeScheduler:
          enabled: false
        kubeProxy:
          enabled: false
        kubeStateMetrics:
          enabled: false
        nodeExporter:
          enabled: false
        prometheusOperator:
          logLevel: debug
          namespaces:
            releaseNamespace: true
            additional:
            - kube-system
            - garage
            - rook-ceph2
            - velero
        prometheus:
          prometheusSpec:
            serviceMonitorSelectorNilUsesHelmValues: false
            logLevel: debug
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: rook-ceph-block
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 10Gi
                  